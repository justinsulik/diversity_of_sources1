<!DOCTYPE html>
<html>
    <head>
        <title>Experiment</title>
        <script language="javascript" src="libraries/p5.min.js"></script>
        <script language="javascript" src="libraries/p5.dom.min.js"></script>
        <script language="javascript" src="libraries/d3.min.js"></script>
        <script language="javascript" src="libraries/lodash.min.js"></script>
        <script language="javascript" src="libraries/jquery-3.4.1.min.js"></script>
        <script language="javascript" src="libraries/jstat.min.js"></script>
        <script language="javascript" src="jspsych/jspsych.js"></script>
        <script language="javascript" src="jspsych/plugins/jspsych-external-html.js"></script>
        <script language="javascript" src="jspsych/plugins/jspsych-source-choice.js"></script>
        <script language="javascript" src="jspsych/plugins/jspsych-source-choice-training.js"></script>
        <script language="javascript" src="jspsych/plugins/jspsych-beast.js"></script>
        <script language="javascript" src="jspsych/plugins/jspsych-instructions.js"></script>
        <script language="javascript" src="jspsych/plugins/jspsych-survey-text.js"></script>
        <link href="jspsych/css/jspsych.css" rel="stylesheet" type="text/css"></link>
        <link href="css/experiment.css" rel="stylesheet" type="text/css"></link>
    </head>
    <body></body>
    <script>

    var input_data = <%- input_data %>
    var trial_id = input_data.trial_id
    var cmpltnCd = makeCode(3)+'RtR' + makeCode(5) + '4z4'
    jsPsych.data.addProperties({cmpltnCd: cmpltnCd,
                                trial_id: trial_id});

    var data = {};
    var timeline = [];
    var experiment_start_time;
    var save_attempts = 0;
    var saveTimeout = 1000;
    var cmpltnCdEnd;
    var dataUrl = '/data?trial_id=' + trial_id;

    var landscapes = ['img/landscape/scene1.png','img/landscape/scene2.png','img/landscape/scene3.png'];
    var landscapes_shuffled = jsPsych.randomization.shuffle(landscapes);

    // set up condition

    var social_info_condition;
    var conditional_instructions;
    if(Math.random()<0.5){
      social_info_condition = 'random';
      conditional_instructions = "Click on each person's <b>TV</b>, which will shuffle through the local TV stations and select a <b>random</b> station for them to watch.";
    } else {
      social_info_condition = 'intentional';
      conditional_instructions = "Click on each person's <b>remote control</b>, and they will turn on their most trusted local news station.";
    }

    // consent

    var consent = {
      type: 'external-html',
      url: '../views/consent.html',
      check_fn: function(){
        experiment_start_time = Date.now();
        return true;
      },
      cont_btn: 'consent'
    }


    var welcome = {
      type: 'instructions',
      page: ['In this study, you will be doing two main tasks. First is a number estimation task. Second, we\'ll give you information about some small towns and ask you to make some decisions.'],
      show_clickable_nav: true,
    }

    var beast_instructions = {
      type: 'instructions',
      pages: ['For the first task, you will do 5 trials where you will see between 50 and 120 animals briefly displayed on your screen. '+
      'You should try to <b>estimate</b> how many there are, though it will be too quick for you to actually count them.<br><br>'+
      'After 6 seconds they will disappear, but you will have another 9 seconds (15 seconds in total) to provide your answer.',
      "Once you've made a guess, we'll show you the guess of another Turker, who previously did this task. "+
      "Sometimes two heads are better than one! You can then choose to stick with your original estimate, or to update it in light of the other Turker's opinion.<br><br>"+
      "Since we want you to estimate (rather than count), there is a time limit of 15 seconds for each trial, "+
      "meaning that even if you take a screen cap before the image disappears, you won't have time to count the animals before your time is up.",
      "You can just hit ENTER to submit your response, though we have also included a submit button for those who want it."],
      show_clickable_nav: true
    }

    var animals = ['bear', 'hamster', 'kangaroo', 'koala', 'lion'];
    var animalImgs = _.map(animals, function(animal){
      return 'img/beast/'+animal+'.png'
    })
    var beastCounts = [98, 78, 59, 74, 69];
    var beastParams = _.map(jsPsych.randomization.shuffle(_.range(animals.length)), function(i){
      return {animal: animals[i], count: beastCounts[i]}
    })


    var beast = {
      type: 'beast',
      timeline: beastParams
    }

    var estimation_instructions1 = {
      type: 'instructions',
      pages: ['For the second task, you will make some decisions.<br><br>'+
        'The first main decision you will make is whether you think something is <b>morally ok</b>.<br><br>'+
        'We are only interested in what you think <b>generally</b>, '+
        'so don\'t worry about thinking up special cases where maybe a rule could be broken. '+
        'For instance, you might think it\'s generally bad to kill people, '+
        'regardless of whether it might be ok in an unlikely situation where you could travel back in time to kill Hitler.<br><br>',
        'We are interested in whether it\'s morally ok for <b>people in general</b>, not in whether <b>you</b> do it yourself. '+
        'For instance, even if you don\'t drink alcohol, you might still think it\'s morally ok for other people to do so, in which case you\'d rate this as acceptable.<br><br>'+
        'For each decision, you\'ll also rate how confident you are in your answer. For instance, you might think something is probably morally ok, but be quite unsure about it.',
        'Every time you have to make a <b>moral</b> judgment, we will indicate it using these scales:<br><img src="img/icons/moral.png" style="width:200px"></img>'
      ],
      show_clickable_nav: true
    }

    var estimation_practice1 = {
      type: 'source-choice-training',
      rating_type: 'morality',
      main_instructions: 'For example, how acceptable do you think <b>spanking children</b> is? If you mouse over the scale below, it will reflect different ratings from "morally bad" to "morally good". <b>Only click once you have made your decision.</b>',
      secondary_instructions: 'How confident are you about your decision? Again, mousing over the scale will reflect different ratings. Clicking on the scale will make your decision.'
    }

    var estimation_practice2 = {
      type: 'source-choice-training',
      rating_type: 'morality',
      main_instructions: 'Another example, how acceptable do you think <b>helping poor people</b> is? Mouse over the scale, and click when you\'ve made your decision.',
      secondary_instructions: 'How confident are you about your decision?'
    }

    var estimation_instructions2 = {
      type: 'instructions',
      pages: ['The other main decision you will make is how <b>likely</b> something is. '+
      'For example, there is a 50% chance of a fair coin coming up heads.<br><br>'+
      'Specifically, here you will be deciding the likelihood of <b>election</b> results.',
      'We are interested in what you think the <b>election outcome</b> will be, not in how <b>you</b> would vote personally.<br><br>'+
      'For example, you might think that president Trump is going to win re-election, even if you don\'t like him yourself (or the reverse!).<br><br>'+
      'Essentially, you are trying to predict the election outcome.<br><br>'+
      'Once more, we will ask you for your confidence about your decision. For instance, you might think that someone is likely to win, but be quite unsure about it.',
      'Every time you have to make a judgment about the <b>likelihood</b> of an election outcome, we will indicate it using this ballot box:<br><img src="img/icons/vote.png" style="width:200px"></img>'
      ],
      show_clickable_nav: true,
    }

    var estimation_practice3 = {
      type: 'source-choice-training',
      rating_type: 'likelihood',
      main_instructions: 'For example, how likely do you think Trump is to win re-election? If you mouse over the scale below, it will reflect different ratings from "Very unlikely" to "Very likely". <b>Only click once you have made your decision.</b>',
      secondary_instructions: 'How confident are you about your decision? Again, mousing over the scale will reflect different ratings. Clicking on the scale will make your decision.'
    }

    var estimation_practice4 = {
      type: 'source-choice-training',
      rating_type: 'likelihood',
      main_instructions: 'Another example, how likely do you think it is that a Democrat would win as governor of your state in the next election? Mouse over the scale, and click when you\'ve made your decision.',
      secondary_instructions: 'How confident are you about your decision?'
    }

    var final_instructions = {
      type: 'instructions',
      pages: ['<img src="img/soc_info.png" style="height:400px; float: left"></img>'+
      'In addition, we\'ll give you information about what these characters think. They will be using the exact same scale as you. '+
      'If you\'ve just rated how likely something is, and are then given other people\'s opinions like the image here, then their thought bubbles reflect how likely they think the same thing is.<br><br>'+
      'So the one with the highest estimate is the guy at the top with the orange shirt, and the one with the lowest estimate is the one in the middle with the red shirt and moustache.',
      'Now that you\'ve been shown how to use the scales, we will begin the task. Imagine that we are visiting three small American towns, one after the other.<br><br>'+
      'For each town, you will make one judgment about morality, and one judgment about the likelihood of an outcome in a local election. '+
      'In both cases, you will also be shown the opinions of random samples of the local population.<br><br>'+
      'You can assume that each sample of people is typical of the area. '+
      'You can also assume that they are informed about the issues - they have learned about them from local TV stations.',
      'In each case, we will ask you to make an estimate, and then show you what the locals think. Finally, you will be able to update your estimate.'
      ],
      show_clickable_nav: true
    }

    // set up agents

    var agent_factors = {gender: ['m', 'f'], hair: _.range(15)};
    var agents = jsPsych.randomization.factorial(agent_factors, 1);

    // set up channels
    // var channel_colors = {
    //   green: [0, 1, 4, 17],
    //   blue: [5, 7, 14, 16],
    //   red: [2, 19],
    //   brown: [3, 18],
    //   pink: [9, 12],
    //   orange: [10, 11],
    //   purple: [6, 8, 13, 15]
    // }

    var channel_colors = {
      0: 'green', 1: 'green', 4: 'green', 17: 'green',
      5: 'blue', 7: 'blue', 14: 'blue', 16: 'blue',
      2: 'red', 19: 'red',
      3: 'brown', 18: 'brown',
      8: 'purple', 9: 'pink', 12: 'pink',
      10: 'orange', 11: 'orange',
      6: 'purple', 13: 'purple', 15: 'purple'
    }
    // colors that are too similar to be on the screen at the same time
    // var clashes = {
    //   pink: ['purple', 'red', 'pink'],
    //   purple: ['pink', 'blue', 'red', 'purple'],
    //   red: ['pink', 'purple', 'orange', 'red'],
    //   brown: ['orange', 'brown'],
    //   orange: ['brown', 'red', 'orange'],
    //   green: ['blue', 'green'],
    //   blue: ['green', 'purple', 'blue']
    // }
    var clashes = {
      pink: ['purple', 'red', 'pink'],
      purple: ['pink', 'purple'],
      red: ['pink', 'red'],
      brown: ['orange', 'brown'],
      orange: ['brown', 'orange'],
      green: ['green'],
      blue: ['blue']
    }

    function checkClashes(channel){
      // check whether colors clash as per above dict
      var color2 = channel_colors[channel]
      // if(clashes[color1].indexOf(color2)==-1){
      if(color2 != color1){
        return false
      } else {
        return true
      }
    }

    function checkGroup(group, channel, channel_list){
      // check if any of the channels already in this group have a clashing color
      color1 = channel_colors[channel]
      var other_channels = channel_list[group];
      // console.log(group, other_channels)
      if(other_channels.some(checkClashes)){
        // if any clashes, don't let it into this group
        return false;
      } else {
        return true;
      }
    }

    function divideChannels(){
      // get channels into 3 groups of 5, with no color clashes within any group
      var channels = jsPsych.randomization.shuffle(_.range(20))
      var channel_list = [[], [], []]
      var current_group = 0;
      var color1; // track the current color
      channels.forEach(function(channel, i){
        // console.log(channel, channel_colors[channel], clashes[channel_colors[channel]])
        if(current_group<3){
          if(checkGroup(current_group, channel, channel_list)){
            channel_list[current_group].push(channel)
          } else if(current_group+1 < 3){
              if(checkGroup(current_group+1, channel, channel_list)){
                channel_list[current_group+1].push(channel)
              } else if(current_group+2 < 3){
                if(checkGroup(current_group+2, channel, channel_list)){
                  channel_list[current_group+2].push(channel)
                }
              }
            }
          if(channel_list[current_group].length==5){
            if(current_group < 3){
              current_group += 1
            }
          }
        }
      })
      if(checkGroups(channel_list)){
        return channel_list;
      } else {
        retry = divideChannels();
        return retry;
      }
    }

    function checkGroups(groups){
      //check that all groups have 5 channels
      var total = 0;
      var pass = 0;
      groups.forEach(function(d){
        total += 1;
        if(d.length==5){
          pass+=1
        }
      })
      if(pass/total==1){
        return true;
      } else {
        return false;
      }
    }

    groups = divideChannels();

    var mayor_instructions = {
      type: 'instructions',
      pages: ['In the next task, we will be telling you about some small towns in the US that are having elections for mayor']
    }

    // set up scenarios

    var trial_order = jsPsych.randomization.shuffle(_.range(3));

    var mayor_instructions_left = {
      scenario: "Bob Smith is one of two candidates running for mayor of Greenville. His platform involves increasing the town's education budget, building more bicycle paths, and instituting equal pay.",
      priorEstimate: 'How likely do you think Bob Smith is to win? Rate your belief on the scale below (click scale to confirm).',
      tvStart: "In Greenville, there has been a lot of discussion about the election on TV. " + conditional_instructions,
      tvsOn: "The people of Greenville have each decided how likely they think Bob Smith is to win. Click 'next' to see their beliefs about his chances.",
      socInfoCheck: 'Click on the <b>person</b> that thinks he has the highest chance.',
      posteriorEstimate: "Have a look at people's opinions. What do you think Bob Smith's chances of winning are? Rate the likelihood on the scale below (click scale to confirm)."
    }

    var mayor_instructions_centrist = {
      scenario: "Tod Brown is one of two candidates running for mayor of Kingston. His platform involves increasing jobs by improving roads and building houses.",
      priorEstimate: 'How likely do you think Tod Brown is to win? Rate your belief on the scale below (click scale to confirm).',
      tvStart: "In Kingston, there has been a lot of discussion about the election on TV. " + conditional_instructions,
      tvsOn: "The people of Kingston have each decided how likely they think Tod Brown is to win. Click 'next' to see their beliefs about his chances.",
      socInfoCheck: 'Click on the <b>person</b> that thinks he has the highest chance.',
      posteriorEstimate: "Have a look at people's opinions. What do you think Tod Brown's chances of winning are? Rate the likelihood on the scale below (click scale to confirm)."
    }

    var mayor_instructions_right = {
      scenario: "Linda Johnson is one of two candidates running for mayor of Fairfield. Her platform involves reducing property taxes, hiring more police officers, and clearing a local slum.",
      priorEstimate: 'How likely do you think Linda Jones is to win? Rate your belief on the scale below (click scale to confirm).',
      tvStart: "In Fairfield, there has been a lot of discussion about the election on TV. " + conditional_instructions,
      tvsOn: "The people of Fairfield have each decided how likely they think Linda Jones is to win. Click 'next' to see their beliefs about her chances.",
      socInfoCheck: 'Click on the <b>person</b> that thinks she has the highest chance.',
      posteriorEstimate: "Have a look at people's opinions. What do you think Linda Jones's chances of winning are? Rate the likelihood on the scale below (click scale to confirm)."
    }

    var mayor_diversity = jsPsych.randomization.shuffle(['low', 'high'])

    var mayor_settings = [
      {instructions: mayor_instructions_left,
        agreement: 'disagree',
        diversity: mayor_diversity[0],
        agent_ids: agents.slice(0, 5),
        channel_ids: groups[0],
        data: {trial_no: 0}},
      {instructions: mayor_instructions_centrist,
        agreement: 'agree',
        diversity: 'medium',
        agent_ids: agents.slice(5,10),
        channel_ids: groups[1],
        data: {trial_no: 1}},
      {instructions: mayor_instructions_right,
        agreement: 'disagree',
        diversity: mayor_diversity[1],
        agent_ids: agents.slice(10,15),
        channel_ids: groups[2],
        data: {trial_no: 2}}
    ]

    // moral dillema

    var moral_instructions_weed = {
      scenario: "The people of Greenville have been thinking about whether cannabis should be decriminalized.",
      priorEstimate: 'In general, how do you view <b>decriminalization of cannabis</b>? Rate the acceptability on the scale below (click scale to confirm).',
      tvStart: "In Greenville, there has been a lot of discussion about this issue on TV recently. " + conditional_instructions,
      tvsOn: "The people of Greenville have each decided how they feel about recreational cannabis use. Click 'next' to see their beliefs about this issue.",
      socInfoCheck: 'Click on the <b>person</b> that views this most favorably.',
      posteriorEstimate: "Have a look at people's opinions. How acceptable do you think decriminalization of cannabis use is? Rate acceptability on the scale below (click scale to confirm)."
    }

    var moral_instructions_guns = {
      scenario: "The people of Kingston have been thinking about whether gun licences should require tougher background checks.",
      priorEstimate: 'In general, how do you view <b>tougher background checks on gun licences</b>? Rate the acceptability on the scale below (click scale to confirm).',
      tvStart: "In Kingston, there has been a lot of discussion about this issue on TV recently. " + conditional_instructions,
      tvsOn: "The people of Kingston have each decided how they feel about tougher background checks on gun licences. Click 'next' to see their beliefs about this issue.",
      socInfoCheck: 'Click on the <b>person</b> that views this most favorably.',
      posteriorEstimate: "Have a look at people's opinions. How acceptable do you think tougher background checks on gun licences is? Rate the acceptability on the scale below (click scale to confirm)."
    }

    var moral_instructions_immigration = {
      scenario: "The people of Fairfield have been thinking about whether immigration to the USA should be reduced.",
      priorEstimate: 'In general, how do you view <b>stricter immigration policies</b>? Rate the acceptability on the scale below (click scale to confirm).',
      tvStart: "In Fairfield, there has been a lot of discussion about this issue on TV recently. " + conditional_instructions,
      tvsOn: "The people of Fairfield have each decided how they feel about stricker immigration policies. Click 'next' to see their beliefs about this issue.",
      socInfoCheck: 'Click on the <b>person</b> that views this most favorably.',
      posteriorEstimate: "Have a look at people's opinions. How acceptable do you think stricter immigration policies are? Rate the acceptability on the scale below (click scale to confirm)."
    }

    var moral_trials_instructions = jsPsych.randomization.shuffle([moral_instructions_weed, moral_instructions_guns, moral_instructions_immigration]);
    var moral_agreements = jsPsych.randomization.shuffle(['agree', 'agree', 'disagree'])
    var moral_diversity = jsPsych.randomization.shuffle(['low', 'medium', 'high'])

    var moral_settings = [
      {instructions: moral_instructions_weed,
        labels: ['Decriminalization\nbad', 'Decriminalization\ngood'],
        agreement: moral_agreements[0],
        diversity: moral_diversity[0],
        agent_ids: agents.slice(15,20),
        channel_ids: groups[0],
        data: {trial_no: 3}},
      {instructions: moral_instructions_guns,
        labels: ['Tougher checks\nbad', 'Tougher checks\ngood'],
        agreement: moral_agreements[1],
        diversity: moral_diversity[1],
        agent_ids: agents.slice(20,25),
        channel_ids: groups[1],
        data: {trial_no: 4}},
      {instructions: moral_instructions_immigration,
        labels: ['Stricter policies\nbad', 'Stricter policies\ngood'],
        agreement: moral_agreements[2],
        diversity: moral_diversity[2],
        agent_ids: agents.slice(25,30),
        channel_ids: groups[2],
        data: {trial_no: 5}}
    ]

    // biographic info

    var bio_data = {};

    function checkResponses(){
      //Check that all questions are answered, and that only numbers are used in responding to Age
      var age = $('input[name=ageText]', '#biography').val();
      var gender = $('input[name=genderRadio]:checked', '#biography').val();
      var education = $('input[name=eduRadio]:checked', '#biography').val();
      var language = $('input[name=languageRadio]:checked', '#biography').val();
      var honesty = $('input[name=honestyRadio]:checked', '#biography').val();

      var ageFail = true;
      var genderFail = true;
      var genderSelfDescribe = false;
      var languageFail = true;
      var eduFail = true;
      var honestyFail = true;

      if( age > 0 ){
        ageFail = false;
        $('#age>p').css('color', 'black');
      } else {
        $('#age>p').css('color', 'red');
      }

      if( gender == 'other' ){
        genderSelfDescribe = true;
        var descr = $('input[name=other_text]', '#biography').val().replace(/\s+/g, '');
        if( descr.length > 0 ){
          genderSelfDescribe = false;
          gender = descr
        }
      }

      if (typeof gender != 'undefined'){
        genderFail = false;
        $('#gender>p').css('color', 'black');
      } else {
        $('#gender>p').css('color', 'red');
      }

      if (education >= 0){
        eduFail = false;
        $('#education>p').css('color', 'black');
      } else {
        $('#education>p').css('color', 'red');
      }

      if( language >= 0 ){
        languageFail = false;
        $('#language>p').css('color', 'black');
      } else {
        $('#language>p').css('color', 'red');
      }

      if( honesty >= 0 ){
        honestyFail = false;
        $('#honesty>p').css('color', 'black');
      } else {
        $('#honesty>p').css('color', 'red');
      }


      if( genderFail || ageFail || languageFail || genderSelfDescribe || eduFail || honestyFail ){
        var alertMessage = "Please check you've provided an answer to all questions in red.";
        if( ageFail ){
          alertMessage += " Check that you've only included numbers when giving your age. "
        }
        if( genderSelfDescribe ){
          alertMessage += " If you've chosen to self-describe your gender, please fill in a value. "
        }
        alert(alertMessage);
      } else {
        bio_data = {
          age: age,
          gender: gender,
          language: language,
          education: education,
          honesty: honesty
        };
        return true;
      }

    };

    var biographic = {
      type: 'external-html',
      url: '../views/biographic.html',
      check_fn: checkResponses,
      cont_btn: 'submit',
    }

    var feedback = {
      type: 'survey-text',
      questions: [{prompt: 'Any feedback for us? Leave blank if not.',
      placeholder: '',
      rows: 5,
      columns: 80,
      name: 'feedback'}]
    }


    // timeline

    // timeline.push(consent);
    // timeline.push(beast_instructions);
    timeline.push(beast);

    timeline.push(estimation_instructions1)
    timeline.push(estimation_practice1)
    timeline.push(estimation_practice2)

    timeline.push(estimation_instructions2)
    timeline.push(estimation_practice3)
    timeline.push(estimation_practice4)

    timeline.push(final_instructions)

    var ordinals = {1: 'First', 2: 'Second', 3: 'Finally'};
    var towns = ['Greenville', 'Kingston', 'Fairfield']

    trial_order.forEach(function(d, i){

      var ordinal = ordinals[i+1];
      var intro = {
        type: 'instructions',
        pages: [ordinal + ', we visit the town of '+towns[d]+'.<br><br><img src="'+landscapes_shuffled[d]+'"></img>'],
        show_clickable_nav: true,
      }

      var moral = {
        type: "source-choice",
        choice_type: social_info_condition,
        timeline: [moral_settings[d]],
        rating_type: 'morality',
        on_finish: function(data){
          console.log(data)
        }
      };

      var mayor = {
        type: "source-choice",
        choice_type: social_info_condition,
        timeline: [mayor_settings[d]],
        rating_type: 'likelihood',
      };
      //
      timeline.push(intro)
      timeline.push(moral)
      timeline.push(mayor)

    })

    timeline.push(biographic);

    timeline.push(feedback);

    jsPsych.init({
        preload_images: landscapes_shuffled.concat(animalImgs),
        default_iti: 500,
        show_progress_bar: true,
        exclusions: {
          min_width: 800,
          min_height: 500
        },
        timeline: timeline,
        on_finish: function(){
          save();
        }
    });

    function save(){
      if(save_attempts==0){
        var experiment_end_time = Date.now();
        var duration = experiment_end_time - experiment_start_time;
        var interactionData = jsPsych.data.getInteractionData().json();
        jsPsych.data.get().addToLast({duration: duration,
                                      interactionData: interactionData,
                                      bio_data: bio_data
                                    });
        data.responses = jsPsych.data.get().json();
        data.trial_id = trial_id;
        data.cmpltnCd = cmpltnCd;
        cmpltnCdEnd = cmpltnCd + trial_id;
        console.log('    About to post survey output data...', data);
      }
      dataJSON = JSON.stringify(data);

      $.ajax({
         type: 'POST',
         url: dataUrl,
         data: dataJSON,
         contentType: "application/json",
         timeout: 3000,
         success: function(request, status, error){
           finish(cmpltnCdEnd+'_'+save_attempts)
         },
         error: function(request, status){
           $('#jspsych-content').html("Please wait a few seconds while we save your responses...")
           console.log('    Error posting data...', request, status)
           if ( save_attempts < 5) {
             save_attempts += 1;
             saveTimeout += 500;
             console.log("Trying again, attempt ", save_attempts)
             setTimeout(function () {
                save();
                }, saveTimeout)
           } else {
             finish(cmpltnCdEnd+'_'+save_attempts);
           }
         }
       });
    }

    function finish(cmpltnCd){
      cmpltnCd +=  trial_id;
      window.location.href = "/finish?token="+cmpltnCd;
    }

    function makeCode(len){
      var text = "";
      var possible = "ABCDEFGHIJKLMNOPQRSTUVWXYabcdefghijklmnopqrstuvwxy0123456789";
      for( var i=0; i < len; i++ ){
        text += possible.charAt(Math.floor(Math.random() * possible.length));
      }
      return text;
    };

    </script>
</html>
